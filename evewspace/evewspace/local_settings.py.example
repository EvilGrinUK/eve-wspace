# Set this to False for production or you'll leak memory
#DEBUG = False
DEBUG = True

# Set this to a secret value, google "django secret key" will give you
# plenty of generators to choose from

SECRET_KEY = 'alan_please_add_secret_key'

# Set this to the directory you are service static files out of so that
# manage.py collectstatic can put them in the right place

STATIC_ROOT = "/home/maptool/static/"

# Put the host name or IP address of all servers that can access the site
# directly. If you use a reverse proxy, this should be the proxy server
# address (most likely localhost). The default setting may be insecure.

ALLOWED_HOSTS = ['*',]

# Put your DB details here

DATABASES = {
        'default': {
                'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
                'NAME': 'evewspace',                      # Or path to database file if using sqlite3.
                'USER': 'root',                      # Not used with sqlite3.
                'PASSWORD': '',                  # Not used with sqlite3.
                'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
                'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
        }
}

# Set your E-mail options below if you need to override the defaults
#SERVER_EMAIL='bob@J100820.wh'
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = ''
#EMAIL_PORT = 25
#EMAIL_HOST_USER = ''
#EMAIL_HOST_PASSWORD = ''
#EMAIL_USE_TLS = False
#
#If you use the file e-mail backend, set this:
#EMAIL_FILE_PATH = '/tmp/ews-email-dump'

# This is the default celery beat schedule, modify it to your liking

from datetime import timedelta
from celery.schedules import crontab
CELERYBEAT_SCHEDULE = {
        'map_stats':{
                'task': 'Map.tasks.update_system_stats',
                'schedule': timedelta(hours=1),
                'args': ()
            },
        'map_sov':{
                'task': 'Map.tasks.update_system_sov',
                'schedule': crontab(minute=0, hour=10),
                'args': ()
            },
        'jump_cache':{
                'task': 'Map.tasks.fill_jumps_cache',
                'schedule': timedelta(minutes=10),
                'args': ()
            },
        'downtime_sites': {
                'task': 'Map.tasks.downtime_site_update',
                'schedule': crontab(minute=5, hour=11),
                'args': ()
            },
        'alliance_update':{
                'task': 'core.tasks.update_all_alliances',
                'schedule': crontab(minute=30, hour=10, day_of_week="tue"),
                'args': ()
            },
        'stale_locations':{
                'task': 'Map.tasks.clear_stale_records',
                'schedule': timedelta(minutes=5),
                'args': ()
            },
        'cache_reddit':{
                'task': 'core.tasks.cache_eve_reddit',
                'schedule': timedelta(minutes=45),
                'args': ()
            },
        'cache_feeds':{
                'task': 'core.tasks.update_feeds',
                'schedule': timedelta(minutes=30),
                'args': ()
            },
        'char_data':{
                'task': 'API.tasks.update_char_data',
                'schedule': timedelta(hours=1),
                'args': ()
            },
        'char_location_data':{
                'task': 'API.tasks.update_char_location',
                'schedule': timedelta(seconds=30),
                'args': ()
            },
        }

# Location of the message broker for celery, defaults to local
# AMQP with guest/guest and / vhost

BROKER_URL = 'amqp://guest:guest@localhost:5672/'

# Django cahce settings, defaults to local memcached instance

CACHES = {
    'default': {
        'BACKEND': 'infinite_memcached.cache.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
        'TIMEOUT': 0
    }
}

#SSO
SSO_ENABLED = False
SSO_SECRET_KEY = 'x' #to be created at https://developers.eveonline.com/ for TQ
SSO_CLIENT_ID = 'x' #to be created at https://developers.eveonline.com/ for TQ
#callback URL is your base URL + /api/sso/login/
SSO_BASE_URL = 'x' #do not forget the / at the end and https if the connection is secure
#'esi-location.read_location.v1 esi-location.read_ship_type.v1 characterLocationRead' are needed for location and ship type information
SSO_SCOPE = 'esi-location.read_location.v1 esi-location.read_ship_type.v1 characterLocationRead' #scope of authorizations requested
SSO_USER_AGENT = 'EVE W-space Instance' #Header
